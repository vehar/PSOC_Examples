--------------- Build Started: 01/07/2025 12:03:18 Project: SPIM_Example01, Configuration: ARM GCC 5.4-2016-q2-update Debug ---------------
The code generation step is up to date.
arm-none-eabi-gcc.exe -mcpu=cortex-m3 -mthumb -I. -IGenerated_Source\PSoC5 -Wa,-alh=.\CortexM3\ARM_GCC_541\Debug/main.lst -g -Wall -ffunction-sections -ffat-lto-objects -O0 -c main.c -o .\CortexM3\ARM_GCC_541\Debug\main.o
main.c: In function 'main':
main.c:158:11: warning: variable 'value' set but not used [-Wunused-but-set-variable]
     int32 value = bbdata.SHUNTDATA;
           ^
At top level:
main.c:265:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT TriggerSwDmaRequest(void)
            ^
main.c:260:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT TriggerHwDmaRequest(void)
            ^
main.c:251:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT UpdateDmaTdDstAddress(uint8 td, uint32 dstAddr)
            ^
main.c:243:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT UpdateDmaTdAddress(uint8 td, uint32 srcAddr)
            ^
main.c:227:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT CopyWithMemcpy(const uint8 *src, uint8 *dest, size_t size)
            ^
main.c:219:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT CopyWithLoop(const uint8 *src, uint8 *dest, size_t size)
            ^
main.c:204:12: warning: always_inline function might not be inlinable [-Wattributes]
 INLINE_HOT CopyWithDma(const uint8 *src, uint8 *dest, size_t size)
            ^
arm-none-eabi-ar.exe -rs .\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.a .\CortexM3\ARM_GCC_541\Debug\ss.o .\CortexM3\ARM_GCC_541\Debug\dmaReq.o .\CortexM3\ARM_GCC_541\Debug\SPIM.o .\CortexM3\ARM_GCC_541\Debug\SPIM_PM.o .\CortexM3\ARM_GCC_541\Debug\SPIM_INT.o .\CortexM3\ARM_GCC_541\Debug\DMA_TX_dma.o .\CortexM3\ARM_GCC_541\Debug\sclk.o .\CortexM3\ARM_GCC_541\Debug\mosi.o .\CortexM3\ARM_GCC_541\Debug\miso.o .\CortexM3\ARM_GCC_541\Debug\Clock.o .\CortexM3\ARM_GCC_541\Debug\Control_Reg_1.o .\CortexM3\ARM_GCC_541\Debug\Control_Reg_1_PM.o .\CortexM3\ARM_GCC_541\Debug\dmaFinishIrq.o .\CortexM3\ARM_GCC_541\Debug\swCopyStart.o .\CortexM3\ARM_GCC_541\Debug\swCopyEnd.o .\CortexM3\ARM_GCC_541\Debug\CyDmac.o .\CortexM3\ARM_GCC_541\Debug\CyFlash.o .\CortexM3\ARM_GCC_541\Debug\CyLib.o .\CortexM3\ARM_GCC_541\Debug\cyPm.o .\CortexM3\ARM_GCC_541\Debug\CySpc.o .\CortexM3\ARM_GCC_541\Debug\cyutils.o .\CortexM3\ARM_GCC_541\Debug\cy_em_eeprom.o .\CortexM3\ARM_GCC_541\Debug\CyBootAsmGnu.o
arm-none-eabi-ar.exe: creating .\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.a
arm-none-eabi-gcc.exe -Wl,--start-group -o C:\Work\_Tools\Tool_ADV_board\PSOC_Examples\PSOC_SPI_DMA\SPIM_Example01.cydsn\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.elf .\CortexM3\ARM_GCC_541\Debug\main.o .\CortexM3\ARM_GCC_541\Debug\cyfitter_cfg.o .\CortexM3\ARM_GCC_541\Debug\cymetadata.o .\CortexM3\ARM_GCC_541\Debug\Cm3Start.o .\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.a "C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\CortexM3\ARM_GCC_541\Debug\CyComponentLibrary.a" -mcpu=cortex-m3 -mthumb -L Generated_Source\PSoC5 -Wl,-Map,.\CortexM3\ARM_GCC_541\Debug/SPIM_Example01.map -T Generated_Source\PSoC5\cm3gcc.ld -specs=nano.specs -Wl,--gc-sections -Wl,--section-start=.ram2=0x20000000 -g -ffunction-sections -O0 -ffat-lto-objects -Wl,--end-group
cyelftool.exe -C C:\Work\_Tools\Tool_ADV_board\PSOC_Examples\PSOC_SPI_DMA\SPIM_Example01.cydsn\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.elf --flash_row_size 256 --flash_size 262144 --flash_offset 0x00000000
No ELF section .cychecksum found, creating one
Application checksum calculated and stored in ELF section .cychecksum
Checksum calculated and stored in ELF section .cymeta
cyelftool.exe -S C:\Work\_Tools\Tool_ADV_board\PSOC_Examples\PSOC_SPI_DMA\SPIM_Example01.cydsn\CortexM3\ARM_GCC_541\Debug\SPIM_Example01.elf
Flash used: 3954 of 262144 bytes (1,5%).
SRAM used: 2633 of 65536 bytes (4,0%). Stack: 2048 bytes. Heap: 128 bytes.
--------------- Build Succeeded: 01/07/2025 12:03:19 ---------------
